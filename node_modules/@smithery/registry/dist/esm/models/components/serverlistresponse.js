/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { ServerListItem$inboundSchema, ServerListItem$outboundSchema, } from "./serverlistitem.js";
/** @internal */
export const ServerListResponse$inboundSchema = z.object({
    servers: z.array(ServerListItem$inboundSchema),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const ServerListResponse$outboundSchema = z.object({
    servers: z.array(ServerListItem$outboundSchema),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ServerListResponse$;
(function (ServerListResponse$) {
    /** @deprecated use `ServerListResponse$inboundSchema` instead. */
    ServerListResponse$.inboundSchema = ServerListResponse$inboundSchema;
    /** @deprecated use `ServerListResponse$outboundSchema` instead. */
    ServerListResponse$.outboundSchema = ServerListResponse$outboundSchema;
})(ServerListResponse$ || (ServerListResponse$ = {}));
export function serverListResponseToJSON(serverListResponse) {
    return JSON.stringify(ServerListResponse$outboundSchema.parse(serverListResponse));
}
export function serverListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ServerListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ServerListResponse' from JSON`);
}
//# sourceMappingURL=serverlistresponse.js.map