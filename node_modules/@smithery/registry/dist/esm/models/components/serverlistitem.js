/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ServerListItem$inboundSchema = z.object({
    qualifiedName: z.string(),
    displayName: z.string(),
    description: z.string(),
    homepage: z.string(),
    useCount: z.number().int(),
    createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
});
/** @internal */
export const ServerListItem$outboundSchema = z.object({
    qualifiedName: z.string(),
    displayName: z.string(),
    description: z.string(),
    homepage: z.string(),
    useCount: z.number().int(),
    createdAt: z.date().transform(v => v.toISOString()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ServerListItem$;
(function (ServerListItem$) {
    /** @deprecated use `ServerListItem$inboundSchema` instead. */
    ServerListItem$.inboundSchema = ServerListItem$inboundSchema;
    /** @deprecated use `ServerListItem$outboundSchema` instead. */
    ServerListItem$.outboundSchema = ServerListItem$outboundSchema;
})(ServerListItem$ || (ServerListItem$ = {}));
export function serverListItemToJSON(serverListItem) {
    return JSON.stringify(ServerListItem$outboundSchema.parse(serverListItem));
}
export function serverListItemFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ServerListItem$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ServerListItem' from JSON`);
}
//# sourceMappingURL=serverlistitem.js.map