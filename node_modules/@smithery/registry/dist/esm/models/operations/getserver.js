/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const GetServerRequest$inboundSchema = z.object({
    qualifiedName: z.string(),
});
/** @internal */
export const GetServerRequest$outboundSchema = z.object({
    qualifiedName: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetServerRequest$;
(function (GetServerRequest$) {
    /** @deprecated use `GetServerRequest$inboundSchema` instead. */
    GetServerRequest$.inboundSchema = GetServerRequest$inboundSchema;
    /** @deprecated use `GetServerRequest$outboundSchema` instead. */
    GetServerRequest$.outboundSchema = GetServerRequest$outboundSchema;
})(GetServerRequest$ || (GetServerRequest$ = {}));
export function getServerRequestToJSON(getServerRequest) {
    return JSON.stringify(GetServerRequest$outboundSchema.parse(getServerRequest));
}
export function getServerRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetServerRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetServerRequest' from JSON`);
}
//# sourceMappingURL=getserver.js.map