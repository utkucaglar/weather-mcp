/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListServersRequest$inboundSchema = z.object({
    q: z.string().optional(),
    page: z.number().int().default(1),
    pageSize: z.number().int().default(10),
});
/** @internal */
export const ListServersRequest$outboundSchema = z.object({
    q: z.string().optional(),
    page: z.number().int().default(1),
    pageSize: z.number().int().default(10),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListServersRequest$;
(function (ListServersRequest$) {
    /** @deprecated use `ListServersRequest$inboundSchema` instead. */
    ListServersRequest$.inboundSchema = ListServersRequest$inboundSchema;
    /** @deprecated use `ListServersRequest$outboundSchema` instead. */
    ListServersRequest$.outboundSchema = ListServersRequest$outboundSchema;
})(ListServersRequest$ || (ListServersRequest$ = {}));
export function listServersRequestToJSON(listServersRequest) {
    return JSON.stringify(ListServersRequest$outboundSchema.parse(listServersRequest));
}
export function listServersRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListServersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListServersRequest' from JSON`);
}
/** @internal */
export const ListServersResponse$inboundSchema = z.object({
    Result: components.ServerListResponse$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Result": "result",
    });
});
/** @internal */
export const ListServersResponse$outboundSchema = z.object({
    result: components.ServerListResponse$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListServersResponse$;
(function (ListServersResponse$) {
    /** @deprecated use `ListServersResponse$inboundSchema` instead. */
    ListServersResponse$.inboundSchema = ListServersResponse$inboundSchema;
    /** @deprecated use `ListServersResponse$outboundSchema` instead. */
    ListServersResponse$.outboundSchema = ListServersResponse$outboundSchema;
})(ListServersResponse$ || (ListServersResponse$ = {}));
export function listServersResponseToJSON(listServersResponse) {
    return JSON.stringify(ListServersResponse$outboundSchema.parse(listServersResponse));
}
export function listServersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListServersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListServersResponse' from JSON`);
}
//# sourceMappingURL=listservers.js.map