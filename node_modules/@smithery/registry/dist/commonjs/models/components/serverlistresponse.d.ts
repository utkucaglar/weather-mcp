import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Pagination, Pagination$Outbound } from "./pagination.js";
import { ServerListItem, ServerListItem$Outbound } from "./serverlistitem.js";
export type ServerListResponse = {
    servers: Array<ServerListItem>;
    pagination: Pagination;
};
/** @internal */
export declare const ServerListResponse$inboundSchema: z.ZodType<ServerListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ServerListResponse$Outbound = {
    servers: Array<ServerListItem$Outbound>;
    pagination: Pagination$Outbound;
};
/** @internal */
export declare const ServerListResponse$outboundSchema: z.ZodType<ServerListResponse$Outbound, z.ZodTypeDef, ServerListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ServerListResponse$ {
    /** @deprecated use `ServerListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ServerListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ServerListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ServerListResponse$Outbound, z.ZodTypeDef, ServerListResponse>;
    /** @deprecated use `ServerListResponse$Outbound` instead. */
    type Outbound = ServerListResponse$Outbound;
}
export declare function serverListResponseToJSON(serverListResponse: ServerListResponse): string;
export declare function serverListResponseFromJSON(jsonString: string): SafeParseResult<ServerListResponse, SDKValidationError>;
//# sourceMappingURL=serverlistresponse.d.ts.map